import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { ActivatedRoute } from '@angular/router';
import { EndpointService } from '../services/endpoint.service';

@Component({
  selector: 'app-openapi',
  templateUrl: './openapi.component.html',
  styleUrl: './openapi.component.css'
})
export class OpenapiComponent implements OnInit {
  docTooltip = "The OpenAPI or Swagger documentation is automatically generated by the KrakenD Enterprise binary when you use the krakend generate openapi command."
  formGroupOpenapi: FormGroup;

  tagsArray: string[] = [];
  audienceArray: string[] = [];
  endpointId: any;
  endPointData:any;

  constructor(private formBuilder: FormBuilder,private route: ActivatedRoute ,private endpointService:EndpointService,) {
    this.formGroupOpenapi = this.formBuilder.group({
      summary: [''],
      description: [''],
      tags: [''],
      audiences: [''],
      example: [null],
      isDocumentationActive: [false],
      tagsArrayValue: [[]],
      audienceArrayValue: [[]]
    })
  }
  ngOnInit(): void {
   
    this.route.parent?.paramMap.subscribe(params => {
      this.endpointId = params.get('id');
      console.log('Parent ID:', this.endpointId);
    });

    this.endpointService.getEndpointById(this.endpointId).subscribe({
      next:(res)=>{
        this.endPointData = res;

        console.log(this.endPointData);
        

        if(this.endPointData){
          this.tagsArray = this.endPointData?.extra_config?.["documentation/openapi"]?.tags ?? [];
          this.audienceArray = this.endPointData?.extra_config?.["documentation/openapi"]?.audience ?? [];
        }

        this.formGroupOpenapi.patchValue({
          summary: this.endPointData?.extra_config?.["documentation/openapi"]?.summary,
          description: this.endPointData?.extra_config?.["documentation/openapi"]?.description,
          tagsArrayValue:this.endPointData?.extra_config?.["documentation/openapi"]?.tags,
          example: this.endPointData?.extra_config?.example,
          isDocumentationActive: !!this.endPointData?.extra_config?.["documentation/openapi"],
          audienceArrayValue:this.endPointData?.extra_config?.["documentation/openapi"]?.audience,
        })

      },
      error:(err)=>{
        console.error(err);
      }
    })
  }

  addParameter(fieldName: 'audiences' | 'tags') {
    const fieldValue = this.formGroupOpenapi.get(fieldName)?.value;
    console.log(fieldName);

    if (fieldName) {
      if (fieldName === 'audiences') {
        this.audienceArray.push(fieldValue);
        this.formGroupOpenapi.get('audienceArrayValue')?.setValue([...this.audienceArray]);

      } else if (fieldName === 'tags') {
        this.tagsArray.push(fieldValue);
        console.log(this.tagsArray);

        this.formGroupOpenapi.get('tagsArrayValue')?.setValue([...this.tagsArray]);
      }
      this.formGroupOpenapi.get(fieldName)?.reset();
    }
  }
  removeParameter(index: number, fieldName: 'audiences' | 'tags') {
    if (fieldName === "audiences") {
      this.audienceArray.splice(index, 1);
      this.formGroupOpenapi.get('audienceArrayValue')?.setValue([...this.audienceArray]);
    } else if (fieldName === 'tags') {
      this.tagsArray.splice(index, 1);
      this.formGroupOpenapi.get('tagsArrayValue')?.setValue([...this.tagsArray]);
    }
  }

  submit(){
    const body = {
      ...(this.formGroupOpenapi.value?.isDocumentationActive && {
        "documentation/openapi": {
          ...((!!this.endPointData?.extra_config?.["documentation/openapi"]) && {"id":this.endPointData?.extra_config?.["documentation/openapi"]?.id}),
          ...(this.formGroupOpenapi.value?.summary && { "summary": this.formGroupOpenapi.value?.summary }),
          ...(this.formGroupOpenapi.value?.description && { "description": this.formGroupOpenapi.value?.description }),
          "example": this.formGroupOpenapi.value?.example ? JSON.parse(this.formGroupOpenapi.value?.example) : null,
          ...(this.formGroupOpenapi.value?.tagsArrayValue?.length != 0 && { "tags": this.formGroupOpenapi.value?.tagsArrayValue }),
          ...(this.formGroupOpenapi.value?.audienceArrayValue?.length != 0 && { "audience": this.formGroupOpenapi.value?.audienceArrayValue })
        }
      }),
    } 

    this.endpointService.addOpenApi(this.endpointId, body).subscribe({
      next:(res)=>{
        console.log(res)
      },
      error:(err)=>{
        console.error(err)
      }
    })
    
  }
}   
