import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import {ThemePalette} from '@angular/material/core';
import { EndpointService } from '../services/endpoint.service';
import { ActivatedRoute } from '@angular/router';

export interface ChipColor {
  name: string;
  color: ThemePalette;
}

@Component({
  selector: 'app-auth',
  templateUrl: './auth.component.html',
  styleUrl: './auth.component.css'
})
export class AuthComponent implements OnInit{

  authForm: FormGroup;
  OAuthTooltip="Enables validation of JWT tokens (OAuth) that have been issued by a third party identity provider (e.g.: OpenID Connect)";
  tokenSignTooltip="Helps legacy applications to sign JWT tokens generated by backends that weren't ready for JWT yet.";
  basicAuthTooltip="The Basic Authentication plugin protects the access to selected endpoints using basic username and password credentials via htpasswd.";

  endpointId: any;
  endPointData:any;
  authValidator:any;


  constructor(private fb:FormBuilder, private endpointService: EndpointService, private route: ActivatedRoute,){
    this.authForm = this.fb.group({
      isOAuthActive:[false],
      // isTokenSiginig:[false],
      // isBasicAuthActive:[false],
      
    })
  }

  getEndpoint(){
    this.endpointService.getEndpointById(this.endpointId).subscribe({
      next: (res) => {
        console.log(res)
        this.endPointData=res;
        this.authValidator = this.endPointData?.extra_config?.['auth/validator']; 
        console.log(this.authValidator);
        

        this.authForm.patchValue({
          isOAuthActive : !!(this.endPointData?.extra_config?.['auth/validator'])
        })
      },
      error:(err)=>{
        console.log(err);
        // this.showError(err?.message)
      }
    })
  }

  ngOnInit(): void {
    this.route.parent?.paramMap.subscribe(params => {
      this.endpointId = params.get('id');
      console.log('Parent ID:', this.endpointId);
    });

    this.getEndpoint();







  }

  

}
